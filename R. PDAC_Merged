library(ggplot2)
library(cellranger)
library(Seurat)
library(patchwork)
library(dplyr)
library(readr)
library(devtools)
library(remotes)
library(SeuratWrappers)
library(monocle3)
library(RColorBrewer)
library(CellChat)
library(pheatmap)
library(corrplot)
library(matrix)

1. Data processing

#Loading data and creating Seurat objects

AdjNorm_TISSUE_1.data <- Read10X(data.dir = "~/Data.Merged/AdjNorm_TISSUE_1/filtered_feature_bc_matrix/")
AdjNorm_TISSUE_1 <- CreateSeuratObject(counts = AdjNorm_TISSUE_1.data, project = 'AdjNorm_TISSUE_1', min.cells = 3, min.features = 200)

AdjNorm_TISSUE_2.data <- Read10X(data.dir = "~/Data.Merged/AdjNorm_TISSUE_2/filtered_feature_bc_matrix/")
AdjNorm_TISSUE_2 <- CreateSeuratObject(counts = AdjNorm_TISSUE_2.data, project = 'AdjNorm_TISSUE_2', min.cells = 3, min.features = 200)

AdjNorm_TISSUE_3.data <- Read10X(data.dir = "~/Data.Merged/AdjNorm_TISSUE_3/filtered_feature_bc_matrix/")
AdjNorm_TISSUE_3 <- CreateSeuratObject(counts = AdjNorm_TISSUE_3.data, project = 'AdjNorm_TISSUE_3', min.cells = 3, min.features = 200)

PDAC_TISSUE_1.data <- Read10X(data.dir = "~/Data.Merged/PDAC_TISSUE_1/filtered_feature_bc_matrix/")
PDAC_TISSUE_1 <- CreateSeuratObject(counts = PDAC_TISSUE_1.data, project = 'PDAC_TISSUE_1', min.cells = 3, min.features = 200)

PDAC_TISSUE_2.data <- Read10X(data.dir = "~/Data.Merged/PDAC_TISSUE_2/filtered_feature_bc_matrix/")
PDAC_TISSUE_2 <- CreateSeuratObject(counts = PDAC_TISSUE_2.data, project = 'PDAC_TISSUE_2', min.cells = 3, min.features = 200)

PDAC_TISSUE_3.data <- Read10X(data.dir = "~/Data.Merged/PDAC_TISSUE_3/filtered_feature_bc_matrix/")
PDAC_TISSUE_3 <- CreateSeuratObject(counts = PDAC_TISSUE_3.data, project = 'PDAC_TISSUE_3', min.cells = 3, min.features = 200)

PDAC_TISSUE_4.data <- Read10X(data.dir = "~/Data.Merged/PDAC_TISSUE_4/filtered_feature_bc_matrix/")
PDAC_TISSUE_4 <- CreateSeuratObject(counts = PDAC_TISSUE_4.data, project = 'PDAC_TISSUE_4', min.cells = 3, min.features = 200)

PDAC_TISSUE_5.data <- Read10X(data.dir = "~/Data.Merged/PDAC_TISSUE_5/filtered_feature_bc_matrix/")
PDAC_TISSUE_5 <- CreateSeuratObject(counts = PDAC_TISSUE_5.data, project = 'PDAC_TISSUE_5', min.cells = 3, min.features = 200)

PDAC_TISSUE_6.data <- Read10X(data.dir = "~/Data.Merged/PDAC_TISSUE_6/filtered_feature_bc_matrix/")
PDAC_TISSUE_6 <- CreateSeuratObject(counts = PDAC_TISSUE_6.data, project = 'PDAC_TISSUE_6', min.cells = 3, min.features = 200)

PDAC_TISSUE_7.data <- Read10X(data.dir = "~/Data.Merged/PDAC_TISSUE_7/filtered_feature_bc_matrix/")
PDAC_TISSUE_7 <- CreateSeuratObject(counts = PDAC_TISSUE_7.data, project = 'PDAC_TISSUE_7', min.cells = 3, min.features = 200)

PDAC_TISSUE_8.data <- Read10X(data.dir = "~/Data.Merged/PDAC_TISSUE_8/filtered_feature_bc_matrix/")
PDAC_TISSUE_8 <- CreateSeuratObject(counts = PDAC_TISSUE_8.data, project = 'PDAC_TISSUE_8', min.cells = 3, min.features = 200)

PDAC_TISSUE_9.data <- Read10X(data.dir = "~/Data.Merged/PDAC_TISSUE_9/filtered_feature_bc_matrix/")
PDAC_TISSUE_9 <- CreateSeuratObject(counts = PDAC_TISSUE_9.data, project = 'PDAC_TISSUE_9', min.cells = 3, min.features = 200)

PDAC_TISSUE_10.data <- Read10X(data.dir = "~/Data.Merged/PDAC_TISSUE_10/filtered_feature_bc_matrix/")
PDAC_TISSUE_10 <- CreateSeuratObject(counts = PDAC_TISSUE_10.data, project = 'PDAC_TISSUE_10', min.cells = 3, min.features = 200)

PDAC_TISSUE_11A.data <- Read10X(data.dir = "~/Data.Merged/PDAC_TISSUE_11A/filtered_feature_bc_matrix/")
PDAC_TISSUE_11A <- CreateSeuratObject(counts = PDAC_TISSUE_11A.data, project = 'PDAC_TISSUE_11A', min.cells = 3, min.features = 200)

PDAC_TISSUE_11B.data <- Read10X(data.dir = "~/Data.Merged/PDAC_TISSUE_11B/filtered_feature_bc_matrix/")
PDAC_TISSUE_11B <- CreateSeuratObject(counts = PDAC_TISSUE_11B.data, project = 'PDAC_TISSUE_11B', min.cells = 3, min.features = 200)

PDAC_TISSUE_12.data <- Read10X(data.dir = "~/Data.Merged/PDAC_TISSUE_12/filtered_feature_bc_matrix/")
PDAC_TISSUE_12 <- CreateSeuratObject(counts = PDAC_TISSUE_12.data, project = 'PDAC_TISSUE_12', min.cells = 3, min.features = 200)

PDAC_TISSUE_13.data <- Read10X(data.dir = "~/Data.Merged/PDAC_TISSUE_13/filtered_feature_bc_matrix/")
PDAC_TISSUE_13 <- CreateSeuratObject(counts = PDAC_TISSUE_13.data, project = 'PDAC_TISSUE_13', min.cells = 3, min.features = 200)

PDAC_TISSUE_14.data <- Read10X_h5(data.dir = "~/Data.Merged/PDAC_TISSUE_14/filtered_feature_bc_matrix.h5")
PDAC_TISSUE_14 <- CreateSeuratObject(counts = PDAC_TISSUE_14.data, project = 'PDAC_TISSUE_14', min.cells = 3, min.features = 200)

PDAC_TISSUE_15.data <- Read10X(data.dir = "~/Data.Merged/PDAC_TISSUE_15/filtered_feature_bc_matrix/")
PDAC_TISSUE_15 <- CreateSeuratObject(counts = PDAC_TISSUE_15.data, project = 'PDAC_TISSUE_15', min.cells = 3, min.features = 200)

PDAC_TISSUE_16.data <- Read10X(data.dir = "~/Data.Merged/PDAC_TISSUE_16/filtered_feature_bc_matrix/")
PDAC_TISSUE_16 <- CreateSeuratObject(counts = PDAC_TISSUE_16.data, project = 'PDAC_TISSUE_16', min.cells = 3, min.features = 200)

PDAC_TISSUE_17.data <- Read10X(data.dir = "~/Data.Merged/PDAC_PT01/")
PDAC_TISSUE_17 <- CreateSeuratObject(counts = PDAC_TISSUE_17.data, project = 'PDAC_TISSUE_17', min.cells = 3, min.features = 200)

PDAC_TISSUE_18.data <- Read10X(data.dir = "~/Data.Merged/PDAC_PT02/")
PDAC_TISSUE_18 <- CreateSeuratObject(counts = PDAC_TISSUE_18.data, project = 'PDAC_TISSUE_18', min.cells = 3, min.features = 200)

PDAC_TISSUE_19.data <- Read10X(data.dir = "~/Data.Merged/PDAC_PT03/")
PDAC_TISSUE_19 <- CreateSeuratObject(counts = PDAC_TISSUE_19.data, project = 'PDAC_TISSUE_19', min.cells = 3, min.features = 200)

PDAC_TISSUE_20.data <- Read10X(data.dir = "~/Data.Merged/PDAC_PT04/")
PDAC_TISSUE_20 <- CreateSeuratObject(counts = PDAC_TISSUE_20.data, project = 'PDAC_TISSUE_20', min.cells = 3, min.features = 200)

PDAC_TISSUE_21.data <- Read10X(data.dir = "~/Data.Merged/PDAC_PT05/")
PDAC_TISSUE_21 <- CreateSeuratObject(counts = PDAC_TISSUE_21.data, project = 'PDAC_TISSUE_21', min.cells = 3, min.features = 200)

PDAC_TISSUE_22.data <- Read10X(data.dir = "~/Data.Merged/PDAC_PT06/")
PDAC_TISSUE_22 <- CreateSeuratObject(counts = PDAC_TISSUE_22.data, project = 'PDAC_TISSUE_22', min.cells = 3, min.features = 200)

PDAC_TISSUE_23.data <- Read10X(data.dir = "~/Data.Merged/PDAC_PT07/")
PDAC_TISSUE_23 <- CreateSeuratObject(counts = PDAC_TISSUE_23.data, project = 'PDAC_TISSUE_23', min.cells = 3, min.features = 200)

PDAC_TISSUE_24.data <- Read10X(data.dir = "~/Data.Merged/PDAC_PT08/")
PDAC_TISSUE_24 <- CreateSeuratObject(counts = PDAC_TISSUE_24.data, project = 'PDAC_TISSUE_24', min.cells = 3, min.features = 200)

PDAC_TISSUE_25.data <- Read10X(data.dir = "~/Data.Merged/PDAC_PT09/")
PDAC_TISSUE_25 <- CreateSeuratObject(counts = PDAC_TISSUE_25.data, project = 'PDAC_TISSUE_25', min.cells = 3, min.features = 200)

PDAC_TISSUE_26.data <- Read10X(data.dir = "~/Data.Merged/PDAC_PT10/")
PDAC_TISSUE_26 <- CreateSeuratObject(counts = PDAC_TISSUE_26.data, project = 'PDAC_TISSUE_26', min.cells = 3, min.features = 200)

MET_01.data <- Read10X(data.dir = "~/Data.Merged/PDAC_MET01/")
MET_01 <- CreateSeuratObject(counts = MET_01.data, project = 'MET_01', min.cells = 3, min.features = 200)

MET_03.data <- Read10X(data.dir = "~/Data.Merged/PDAC_MET03/")
MET_02 <- CreateSeuratObject(counts = MET_03.data, project = 'MET_03', min.cells = 3, min.features = 200)

MET_04.data <- Read10X(data.dir = "~/Data.Merged/PDAC_MET04/")
MET_04 <- CreateSeuratObject(counts = MET_04.data, project = 'MET_04', min.cells = 3, min.features = 200)

MET_05.data <- Read10X(data.dir = "~/Data.Merged/PDAC_MET05/")
MET_05 <- CreateSeuratObject(counts = MET_05.data, project = 'MET_05', min.cells = 3, min.features = 200)

MET_06.data <- Read10X(data.dir = "~/Data.Merged/PDAC_MET06/")
MET_06 <- CreateSeuratObject(counts = MET_06.data, project = 'MET_06', min.cells = 3, min.features = 200)
--------------------------------------------------------------------------------------------------------------
#Condition Metadata
MET_01$DiseaseState <-"MET"
MET_01$DiseaseGrade <-"NA"
MET_01$MetastaticSite <-"Liver"
MET_01$ID <- "MET_01"

MET_03$DiseaseState <-"MET"
MET_03$DiseaseGrade <-"NA"
MET_03$MetastaticSite <-"Omentum"
MET_03$ID <- "MET_03"

MET_04$DiseaseState <-"MET"
MET_04$DiseaseGrade <-"NA"
MET_04$MetastaticSite <-"Liver"
MET_04$ID <- "MET_04"

MET_05$DiseaseState <-"MET"
MET_05$DiseaseGrade <-"NA"
MET_05$MetastaticSite <-"Liver"
MET_05$ID <- "MET_05"

MET_06$DiseaseState <-"MET"
MET_06$DiseaseGrade <-"NA"
MET_06$MetastaticSite <-"Liver"
MET_06$ID <- "MET_06"

PDAC_TISSUE_26$MetastaticSite <- "NA"
PDAC_TISSUE_26$DiseaseGrade <-"2"
PDAC_TISSUE_26$DiseaseState <-"PDAC"
PDAC_TISSUE_26$ID <- "PDAC_TISSUE_26"

PDAC_TISSUE_25$MetastaticSite <- "NA"
PDAC_TISSUE_25$DiseaseGrade <-"2"
PDAC_TISSUE_25$DiseaseState <-"PDAC"
PDAC_TISSUE_25$ID <- "PDAC_TISSUE_25"

PDAC_TISSUE_24$MetastaticSite <- "NA"
PDAC_TISSUE_24$DiseaseGrade <-"2"
PDAC_TISSUE_24$DiseaseState <-"PDAC"
PDAC_TISSUE_24$ID <- "PDAC_TISSUE_24"

PDAC_TISSUE_23$MetastaticSite <- "NA"
PDAC_TISSUE_23$DiseaseGrade <-"3"
PDAC_TISSUE_23$DiseaseState <-"PDAC"
PDAC_TISSUE_23$ID <- "PDAC_TISSUE_23"

PDAC_TISSUE_22$MetastaticSite <- "NA"
PDAC_TISSUE_22$DiseaseGrade <-"2"
PDAC_TISSUE_22$DiseaseState <-"PDAC"
PDAC_TISSUE_22$ID <- "PDAC_TISSUE_22"

PDAC_TISSUE_21$MetastaticSite <- "NA"
PDAC_TISSUE_21$DiseaseGrade <-"2"
PDAC_TISSUE_21$DiseaseState <-"PDAC"
PDAC_TISSUE_21$ID <- "PDAC_TISSUE_21"

PDAC_TISSUE_20$MetastaticSite <- "NA"
PDAC_TISSUE_20$DiseaseGrade <-"3"
PDAC_TISSUE_20$DiseaseState <-"PDAC"
PDAC_TISSUE_20$ID <- "PDAC_TISSUE_20"

PDAC_TISSUE_19$MetastaticSite <- "NA"
PDAC_TISSUE_19$DiseaseGrade <-"4"
PDAC_TISSUE_19$DiseaseState <-"PDAC"
PDAC_TISSUE_19$ID <- "PDAC_TISSUE_19"

PDAC_TISSUE_18$MetastaticSite <- "NA"
PDAC_TISSUE_18$DiseaseGrade <-"2"
PDAC_TISSUE_18$DiseaseState <-"PDAC"
PDAC_TISSUE_18$ID <- "PDAC_TISSUE_18"

PDAC_TISSUE_17$MetastaticSite <- "NA"
PDAC_TISSUE_17$DiseaseGrade <-"4"
PDAC_TISSUE_17$DiseaseState <-"PDAC"
PDAC_TISSUE_17$ID <- "PDAC_TISSUE_17"

PDAC_TISSUE_16$MetastaticSite <- "NA"
PDAC_TISSUE_16$DiseaseGrade <-"NA"
PDAC_TISSUE_16$DiseaseState <-"PDAC"
PDAC_TISSUE_16$ID <- "PDAC_TISSUE_16"

PDAC_TISSUE_15$MetastaticSite <- "NA"
PDAC_TISSUE_15$DiseaseGrade <-"NA"
PDAC_TISSUE_15$DiseaseState <-"PDAC"
PDAC_TISSUE_15$ID <- "PDAC_TISSUE_15"

PDAC_TISSUE_13$MetastaticSite <- "NA"
PDAC_TISSUE_13$DiseaseGrade <-"NA"
PDAC_TISSUE_13$DiseaseState <-"PDAC"
PDAC_TISSUE_13$ID <- "PDAC_TISSUE_13"

PDAC_TISSUE_14$MetastaticSite <- "NA"
PDAC_TISSUE_14$DiseaseGrade <-"NA"
PDAC_TISSUE_14$DiseaseState <-"PDAC"
PDAC_TISSUE_14$ID <- "PDAC_TISSUE_14"

PDAC_TISSUE_12$MetastaticSite <- "NA"
PDAC_TISSUE_12$DiseaseGrade <-"NA"
PDAC_TISSUE_12$DiseaseState <-"PDAC"
PDAC_TISSUE_12$ID <- "PDAC_TISSUE_12"

PDAC_TISSUE_11B$MetastaticSite <- "NA"
PDAC_TISSUE_11B$DiseaseGrade <-"NA"
PDAC_TISSUE_11B$DiseaseState <-"PDAC"
PDAC_TISSUE_11B$ID <- "PDAC_TISSUE_11B"

PDAC_TISSUE_11A$MetastaticSite <- "NA"
PDAC_TISSUE_11A$DiseaseGrade <-"NA"
PDAC_TISSUE_11A$DiseaseState <-"PDAC"
PDAC_TISSUE_11A$ID <- "PDAC_TISSUE_11A"

PDAC_TISSUE_10$MetastaticSite <- "NA"
PDAC_TISSUE_10$DiseaseGrade <-"NA"
PDAC_TISSUE_10$DiseaseState <-"PDAC"
PDAC_TISSUE_10$ID <- "PDAC_TISSUE_10"

PDAC_TISSUE_9$MetastaticSite <- "NA"
PDAC_TISSUE_9$DiseaseGrade <-"NA"
PDAC_TISSUE_9$DiseaseState <-"PDAC"
PDAC_TISSUE_9$ID <- "PDAC_TISSUE_9"

PDAC_TISSUE_8$MetastaticSite <- "NA"
PDAC_TISSUE_8$DiseaseGrade <-"NA"
PDAC_TISSUE_8$DiseaseState <-"PDAC"
PDAC_TISSUE_8$ID <- "PDAC_TISSUE_8"

PDAC_TISSUE_7$MetastaticSite <- "NA"
PDAC_TISSUE_7$DiseaseGrade <-"NA"
PDAC_TISSUE_7$DiseaseState <-"PDAC"
PDAC_TISSUE_7$ID <- "PDAC_TISSUE_7"

PDAC_TISSUE_6$MetastaticSite <- "NA"
PDAC_TISSUE_6$DiseaseGrade <-"NA"
PDAC_TISSUE_6$DiseaseState <-"PDAC"
PDAC_TISSUE_6$ID <- "PDAC_TISSUE_6"

PDAC_TISSUE_5$MetastaticSite <- "NA"
PDAC_TISSUE_5$DiseaseGrade <-"NA"
PDAC_TISSUE_5$DiseaseState <-"PDAC"
PDAC_TISSUE_5$ID <- "PDAC_TISSUE_5"

PDAC_TISSUE_4$MetastaticSite <- "NA"
PDAC_TISSUE_4$DiseaseGrade <-"NA"
PDAC_TISSUE_4$DiseaseState <-"PDAC"
PDAC_TISSUE_4$ID <- "PDAC_TISSUE_4"

PDAC_TISSUE_3$MetastaticSite <- "NA"
PDAC_TISSUE_3$DiseaseGrade <-"NA"
PDAC_TISSUE_3$DiseaseState <-"PDAC"
PDAC_TISSUE_3$ID <- "PDAC_TISSUE_3"

PDAC_TISSUE_2$MetastaticSite <- "NA"
PDAC_TISSUE_2$DiseaseGrade <-"NA"
PDAC_TISSUE_2$DiseaseState <-"PDAC"
PDAC_TISSUE_2$ID <- "PDAC_TISSUE_2"

PDAC_TISSUE_1$MetastaticSite <- "NA"
PDAC_TISSUE_1$DiseaseGrade <-"NA"
PDAC_TISSUE_1$DiseaseState <-"PDAC"
PDAC_TISSUE_1$ID <- "PDAC_TISSUE_1"

AdjNorm_TISSUE_1$MetastaticSite <- "NA"
AdjNorm_TISSUE_1$DiseaseGrade <-"NA"
AdjNorm_TISSUE_1$DiseaseState <- "AdjNorm"
AdjNorm_TISSUE_1$ID <- "AdjNorm_TISSUE_1"

AdjNorm_TISSUE_3$MetastaticSite <- "NA"
AdjNorm_TISSUE_3$DiseaseGrade <-"NA"
AdjNorm_TISSUE_3$DiseaseState <- "AdjNorm"
AdjNorm_TISSUE_3$ID <- "AdjNorm_TISSUE_3"

AdjNorm_TISSUE_2$MetastaticSite <- "NA"
AdjNorm_TISSUE_2$DiseaseGrade <-"NA"
AdjNorm_TISSUE_2$DiseaseState <- "AdjNorm"
AdjNorm_TISSUE_2$ID <- "AdjNorm_TISSUE_2"
--------------------------------------------------------------------------------------------------------------
#Merging the objects

AllData.combined <- merge(PDAC_TISSUE_1, y = c(PDAC_TISSUE_2, PDAC_TISSUE_3, PDAC_TISSUE_4, 
                                                   PDAC_TISSUE_5, PDAC_TISSUE_6, PDAC_TISSUE_7, 
                                                   PDAC_TISSUE_8, PDAC_TISSUE_9, PDAC_TISSUE_10, 
                                                   PDAC_TISSUE_11A, PDAC_TISSUE_11B, PDAC_TISSUE_12,
                                                   PDAC_TISSUE_13, PDAC_TISSUE_14, PDAC_TISSUE_15, PDAC_TISSUE_16,
                                                   PDAC_TISSUE_17, PDAC_TISSUE_18, PDAC_TISSUE_19,
                                                   PDAC_TISSUE_20, PDAC_TISSUE_21, PDAC_TISSUE_22, PDAC_TISSUE_23,
                                                   PDAC_TISSUE_24, PDAC_TISSUE_25, PDAC_TISSUE_26, AdjNorm_TISSUE_1, AdjNorm_TISSUE_2,
                                                   AdjNorm_TISSUE_3, MET_01, MET_03, MET_04, MET_05, MET_06) add.cell.ids = c("PDAC_TISSUE_1", "PDAC_TISSUE_2", "PDAC_TISSUE_3",
                                                   "PDAC_TISSUE_4", "PDAC_TISSUE_5", PDAC_TISSUE_6", "PDAC_TISSUE_7", "PDAC_TISSUE_8", "PDAC_TISSUE_9", "PDAC_TISSUE_10",
                                                   "PDAC_TISSUE_11A", "PDAC_TISSUE_11B", "PDAC_TISSUE_12", "PDAC_TISSUE_13", "PDAC_TISSUE_14", "PDAC_TISSUE_15",
                                                   "PDAC_TISSUE_16", "PDAC_TISSUE_17", "PDAC_TISSUE_18", "PDAC_TISSUE_19", "PDAC_TISSUE_20", "PDAC_TISSUE_21",
                                                   "PDAC_TISSUE_22", "PDAC_TISSUE_23", "PDAC_TISSUE_24", "PDAC_TISSUE_25", "PDAC_TISSUE_26", "AdjNorm_TISSUE_1",
                                                   "AdjNorm_TISSUE_2", "AdjNorm_TISSUE_3", "MET_01", "MET_03", "MET_04", "MET_05", "MET_06"), project = "AllData.combined")

#Checking samples present in the object

table(AllData.combined$orig.ident)
Idents(object = AllData.combined) <- 'ID'
levels(AllData.combined)
--------------------------------------------------------------------------------------------------------------
2. Quality control

AllData.combined$mitoRatio <- PercentageFeatureSet(AllData.combined, pattern = "^MT-")
AllData.combined$mitoRatio <- AllData.combined@meta.data$mitoRatio / 100

VlnPlot(AllData.combined, features = c("nFeature_RNA", "nCount_RNA", "percent.mt"), ncol = 3, pt.size = 0.8)

AllData.combined$log10GenesPerUMI <- log10(AllData.combined$nFeature_RNA) / log10(AllData.combined$nCount_RNA)

plot1 <- FeatureScatter(AllData.combined, feature1 = "nCount_RNA", feature2 = "percent.mt")
plot2 <- FeatureScatter(AllData.combined, feature1 = "nCount_RNA", feature2 = "nFeature_RNA")
plot1 + plot2

#DF with our metadata
metadata <- AllData.combined@meta.data
#Rename the columns
metadata <- metadata %>%
        dplyr::rename(nUMI = nCount_RNA,
                      nGene = nFeature_RNA)
#Add back to Seurat object		      
AllData.combined@meta.data <- metadata

#Number of UMI/Transcripts per cell
metadata %>% 
  	ggplot(aes(color=ID, x=nUMI, fill= ID)) + 
  	geom_density(alpha = 0.2) + 
  	scale_x_log10() + 
  	theme_classic() +
  	ylab("Cell density") +
  	geom_vline(xintercept = THRESHOLD)

#Genes detected per cell
metadata %>% 
  	ggplot(aes(color=ID, x=nGene, fill= sample)) + 
  	geom_density(alpha = 0.2) + 
  	theme_classic() +
  	scale_x_log10() + 
  	geom_vline(xintercept = THRESHOLD)

#Correlation between genes detected and number of UMIs similar to FeatureScatter
metadata %>% 
  	ggplot(aes(x=nUMI, y=nGene, color=mitoRatio)) + 
  	geom_point() + 
	scale_colour_gradient(low = "gray90", high = "black") +
  	stat_smooth(method=lm) +
  	scale_x_log10() + 
  	scale_y_log10() + 
  	theme_classic() +
  	geom_vline(xintercept = THRESHOLD) +
  	geom_hline(yintercept = THRESHOLD) +
  	facet_wrap(~ID)

#Visualize the distribution of mitochondrial gene expression detected per cell
metadata %>%
  	ggplot(aes(x=log10GenesPerUMI, color = sample, fill=ID)) +
  	geom_density(alpha = 0.2) +
  	theme_classic() +
  	geom_vline(xintercept = THRESHOLD)

saveRDS(AllData.combined, data.dir = "~/unfilteredData.rds")

#Filtering low quality cells
filtered_data <- subset(x = AllData.combined, 
                         subset= (nUMI >= THRESHOLD) & 
                           (nGene >= THRESHOLD) & 
                           (log10GenesPerUMI > THRESHOLD) & 
                           (mitoRatio < THRESHOLD))

saveRDS(filtered_data, data.dir = "~/filtered_data.rds")

#Verifying if cell cycle phases accounts to our data variability
Cell.cycle <- NormalizeData(filtered_data, normalization.method = "LogNormalize", scale.factor = 10000)
s.genes <- cc.genes$s.genes
g2m.genes <- cc.genes$g2m.genes
Cell.cycle <- CellCycleScoring(Cell.cycle, s.features = s.genes, g2m.features = g2m.genes, set.ident = TRUE)
Cell.cycle <- ScaleData(Cell.cycle)
Cell.cycle <- RunPCA(Cell.cycle)
DimPlot(Cell.cycle, reduction = "pca", group.by = "Phase", split.by = "Phase")
--------------------------------------------------------------------------------------------------------------
3. Integrated Workflow

#Using SCTransform
AllData.combined.list <- SplitObject(filtered_data, split.by = "ID")
AllData.combined.list <- lapply(X = AllData.combined.list, FUN = SCTransform)
features <- SelectIntegrationFeatures(object.list = AllData.combined.list, nfeatures = 3000)
AllData.combined.list <- PrepSCTIntegration(object.list = AllData.combined.list, anchor.features = features)

AllData.combined.anchors <- FindIntegrationAnchors(object.list = AllData.combined.list, normalization.method = "SCT",
    anchor.features = features)
AllData.combined.sct <- IntegrateData(anchorset = AllData.combined.anchors, normalization.method = "SCT")
AllData.combined.sct <- RunPCA(AllData.combined.sct, npcs = 50, verbose = FALSE)
st_dev <- AllData.combined.sct@reductions$pca@stdev
var <- st_dev^2
for(i in 1:length(var)){
  total <- sum(var)
  numerator <- sum(var[1:i])
  expvar <- numerator/total
  if(EndVar == 0){
    if(expvar > 0.9){
      EndVar <- EndVar + 1
      PCNum <- i
    }
  }
}
sum(var[1:nPCA])/ sum(var)

AllData.combined.sct <- RunUMAP(AllData.combined.sct, reduction = "pca", dims = 1:50)

p1<-DimPlot(AllData.combined.sct, reduction = "umap", label = TRUE)
p2<-DimPlot(AllData.combined.sct, reduction = "umap", group.by = "ID")
p1+p2

saveRDS(AllData.combined.sct, data.dir = "~SCT_UnlabeledData.rds")

#Expected Cell Types

#FIBROBLASTS - c('TIMP1', 'FN1', 'POSTN', 'ACTA2', 'APOE', 'LY6D', 'COL3A1', 'CDH11', 'RGS5', 'COL1A1', 'COL1A2', 'S100A4', 'FAP', 'DCN', 'PDPN', 'PDGFRB', 'PDGFRA', 'THY1')

#ACINAR CELLS - c('CTRB1', 'CELA3A', 'CELA3B', 'CTRB2', 'PLA2G1B', 'PRSS2', 'SPINK1', 'CLPS', 'CPA1', 'PRSS1', 'CPA2', 'REG1A', 'PNLIP', 'SYCN',
'PNLIPRP1', 'CTRC', 'KLK1', 'CELA2A', 'CPB1', 'REG3B', 'REG3G')

#ISLET CELLS - c('INS', 'GCG', 'SST', 'GHR', 'PPY', 'GCK', 'PCSK1', 'PCSK2', 'CHGA', 'CHGB', 'SYP', 'KCNJ11')

#EPITHELIAL TUMOR CELLS - c('AGR2', 'CEAMCAM6','S100A6','CLU','MKI67','KRT8','EPCAM','KRT19','KRT18', 'KRT8','TFF1','MUC1', 'SOX9', 'SPP1', 'TFF2')

#T-CELLS - c('CD3D','CD3E','NCAM1','NKG7','CD4','CD8A','PRF1','IFNG', 'GZMB','CD69','FOXP3','TIGIT','TOP2A','FCGR3A')

#B-CELLS - c('CD79A', 'MS4A1','CD20','CD138','IGJ','IGLL5','CXCR4','CD117','CD27','HLA-DRA')

#MACROPHAGES/MONOCYTES - c('CD14','ITGAM','FCGR3A','FCGR3B','APOE','C1QA','MARCO','LYZ','HLA-DRA')

#DENDRITIC CELLS - c('ITGAE','LYZ','CLEC9A','BATF3','IRF8','IDO1','CD207','CD1A','CD1C', 'HLA-DRA','CCL22','LAMP3','IL22RA2','CD101')

#NATURAL KILLER CELLS - c('CD56', 'NKG2A', 'CCR7', 'CD2', 'IFNG', 'PRF1', 'NKG7')

#ENDOTHELIAL CELLS - c('PECAM1', 'PLVAP', 'VWF')

#GRANULOCYTES - c('S100A8', 'S100A9', 'ELANE')

#Finding the markers
Cluster.markers <- FindAllMarkers(AllData.combined.sct, only.pos = TRUE, min.pct = 0.25, logfc.threshold = 0.25, test.use = "roc")

saveRDS(Cluster.markers, data.dir = "~/Unlabeled_ClusterMarkers.rds")

#Naming the clusters
Clusters.ids <- c()
names(Clusters.ids) <- levels(AllData.combined.sct)
AllData.combined.sct <- RenameIdents(AllData.combined.sct, Clusters.ids)

#Add clusters names to metadata
AllData.combined.sct[["Cluster_Labels"]] <- Idents(object = AllData.combined.sct)

saveRDS(AllData.combined.sct, data.dir = "~SCT_LabeledData.rds")
--------------------------------------------------------------------------------------------------------------
4. Plotting Heatmaps/Barplots/Correlation Matrix

#Barplot
BarPlot.pt <- table(Idents(AllData.combined.sct), AllData.combined.sct$ID)
BarPlot.pt <- as.data.frame(BarPlot.pt)
BarPlot.pt$Var1 <- as.character(BarPlot.pt$Var1)
BarPlot.PT = BarPlot.pt %>% rename(Cell_Type = "Var1", ID = "Var2") %>%
  group_by(ID) %>%
  mutate(Percent = Freq / sum(Freq)*100)
ggplot(BarPlot.PT, aes(x = ID, y = Percent, fill = Cell_Type)) +
  geom_bar(stat = "identity")

#Heatmap
features <- c()
Markers_data <- FetchData(AllData.combined.sct, vars = c(features))
tissue_avg <- data.frame()
n <- 1 # number of metadata columns

for (id in levels(factor(Markers_data$Cluster_Labels))) {
  data_subset <- Markers_data %>% filter(Cluster_Labels == id)
  data_subset_avg <- apply(data_subset[,1:(ncol(data_subset)-n)], 2, mean)
  tissue_avg <- rbind(tissue_avg, data_subset_avg)
}

colnames(tissue_avg) <- colnames(Markers_data)[1:(ncol(TME_data)-n)]
rownames(tissue_avg) <- levels(factor(Markers_data$Cluster_Labels))

#Heatmap with cluster markers
pheatmap(as.matrix(tissue_avg), fontsize = 14, color = colorRampPalette(colors = c('#0000FF','#FFFFFF','#FF0000'))(250), 
         border_color = 'black', cellwidth = 20, cellheight = 20, scale = 'column')


Markers_data2 <- FetchData(AllData.combined.sct, vars = c(features, 'ID', 'DiseaseState', 'DiseaseGrade'))
tissue_avg <- data.frame()
n <- 3 # number of metadata columns

for (id in levels(factor(Markers_data2$ID))) {
  data_subset <- Markers_data2 %>% filter(ID == id)
  data_subset_avg <- apply(data_subset[,1:(ncol(data_subset)-n)], 2, mean)
  tissue_avg <- rbind(tissue_avg, data_subset_avg)
}

colnames(tissue_avg) <- colnames(Markers_data2)[1:(ncol(Markers_data2)-n)]
rownames(tissue_avg) <- levels(factor(Markers_data2$ID))

metadata <- unique(Markers_data2 %>% select('ID', 'DiseaseState', 'DiseaseGrade'))
metadata <- metadata[order(metadata$DiseaseState, metadata$DiseaseGrade, decreasing = T),]
rownames(metadata) <- metadata$ID
metadata$ID <- NULL

my_colour = list(DiseaseState = c(AdjNorm = "#080808", PDAC = "#D8D5D5", MET = '#a6cee3'),
                 DiseaseGrade = c(2 = '#33a02c', 
                           3 = '#b2df8a',
                           4 = '#1f78b4',
                           NA = '#fb9a99'))

#Heatmap with metadata information
pheatmap(as.matrix(tissue_avg), fontsize = 14, color = colorRampPalette(colors = c('#0000FF','#FFFFFF','#FF0000'))(250), annotation_row = metadata, annotation_colors = my_colour,
         border_color = 'black', cellwidth = 20, cellheight = 20, scale = 'column')

#Cluster correlation matrix
av.exp <- AverageExpression(AllData.combined.sct)$integrated
matrix <- cor(av.exp)
corrplot(matrix, method = "circle")
corrplot(matrix, method = 'circle', order = 'FPC', type = 'lower', diag = FALSE)
--------------------------------------------------------------------------------------------------------------
5. Subsetting the data - Fibroblasts/Lymphocytes/Myeloid/Epithelial



